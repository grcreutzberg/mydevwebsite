{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog\\\\Dev\\\\Code\\\\mydevwebsite\\\\src\\\\pages\\\\convBinario\\\\index.js\";\nimport React, { Component } from 'react';\nimport \"./styles.css\";\nexport default class convBinario extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      binaryValue: null,\n      decimalValue: null\n    };\n\n    this.convertValueBinToDec = () => {\n      const newDecimalValue = parseInt(document.querySelector('input#binary').value, 2);\n      this.setState({\n        decimalValue: newDecimalValue\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"convBin-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Calculadora bin\\xE1ria\"), React.createElement(\"div\", {\n      className: \"convBin-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Converter bin\\xE1rio para decimal\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"N\\xFAmero bin\\xE1rio\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"0 ou 1\",\n      autoComplete: \"off\",\n      id: \"binary\",\n      value: this.state.binaryValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"N\\xFAmero decimal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"decimal\",\n      value: this.state.decimalValue,\n      readonly: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.convertValueBinToDec,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Converter\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"convBin-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Converter decimal para bin\\xE1rio\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"N\\xFAmero decimal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"0 ou 1\",\n      autoComplete: \"off\",\n      id: \"decimal\",\n      value: this.state.decimalValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"N\\xFAmero bin\\xE1rio\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"binary\",\n      value: this.state.binaryValue,\n      readonly: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.convertValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Converter\")));\n  }\n\n}","map":{"version":3,"sources":["E:/Prog/Dev/Code/mydevwebsite/src/pages/convBinario/index.js"],"names":["React","Component","convBinario","state","binaryValue","decimalValue","convertValueBinToDec","newDecimalValue","parseInt","document","querySelector","value","setState","render","convertValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./styles.css\";\r\n\r\nexport default class convBinario extends Component {\r\n\r\n    state = {\r\n        binaryValue: null,\r\n        decimalValue: null\r\n    }\r\n\r\n    convertValueBinToDec = () => {\r\n        const newDecimalValue = parseInt(document.querySelector('input#binary').value, 2);\r\n        this.setState({\r\n            decimalValue: newDecimalValue\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"convBin-form\">\r\n                <h2>Calculadora binária</h2>\r\n                <div className=\"convBin-div\">\r\n                    <h3>Converter binário para decimal</h3>\r\n                    <label>Número binário</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"0 ou 1\"\r\n                        autoComplete=\"off\"\r\n                        id=\"binary\"\r\n                        value={this.state.binaryValue}\r\n                    />\r\n                    <br />\r\n                    <label>Número decimal</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"decimal\"\r\n                        value={this.state.decimalValue}\r\n                        readonly='true'\r\n                    />\r\n                    <br />\r\n                    <button onClick={this.convertValueBinToDec}>Converter</button>\r\n                </div>\r\n                <br />\r\n                <div className=\"convBin-div\">\r\n                    <h3>Converter decimal para binário</h3>\r\n                    <label>Número decimal</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"0 ou 1\"\r\n                        autoComplete=\"off\"\r\n                        id=\"decimal\"\r\n                        value={this.state.decimalValue}\r\n                    />\r\n                    <br />\r\n                    <label>Número binário</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"binary\"\r\n                        value={this.state.binaryValue}\r\n                        readonly='true'\r\n                    />\r\n                    <br />\r\n                    <button onClick={this.convertValue}>Converter</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}