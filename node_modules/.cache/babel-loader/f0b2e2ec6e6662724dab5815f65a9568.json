{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog\\\\Dev\\\\Code\\\\mydevwebsite\\\\src\\\\pages\\\\diceRoll\\\\index.js\";\nimport React, { Component } from 'react';\nimport diceAPI from '../../services/diceAPI.js';\nimport \"./styles.css\";\nexport default class diceRoll extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      history: [],\n      result: null\n    };\n\n    this.rollDice = () => {\n      this.diceRequest();\n    };\n\n    this.diceRequest = async () => {\n      const data = new Date();\n      const hora = data.getHours() + ':' + data.getMinutes() + ':' + data.getSeconds();\n      const timeDice = document.querySelector('input#timesDice').value;\n      const typeDice = document.querySelector('select#typeDice').value;\n      const modDice = document.querySelector('input#modDice').value;\n      const operador = modDice < 0 ? \"-\" : \"+\";\n      const mod = modDice < 0 ? modDice * -1 : modDice;\n      const response = await diceAPI.get(`/json/${timeDice}d${typeDice}`);\n      let sumDice = 0;\n      let listDice = [];\n\n      for (var i = 0; i < response.data.dice.length; i++) {\n        sumDice += response.data.dice[i].value;\n        listDice.push(response.data.dice[i].value);\n      } //[20:26:53] Jogador rolou 3d20 + 5 = 19 {[7, 2, 5] + 5}\n\n\n      let resultado = '';\n      let output = '';\n\n      if (modDice !== '') {\n        resultado = parseInt(sumDice) + parseInt(modDice);\n        output = '[' + hora + '] Jogador rolou ' + timeDice + 'd' + typeDice + ' ' + operador + ' ' + +mod + ' = ' + resultado + ' {[' + listDice + ']' + operador + ' ' + +mod + '}';\n      } else {\n        resultado = parseInt(sumDice);\n        output = '[' + hora + '] Jogador rolou ' + timeDice + 'd' + typeDice + ' = ' + resultado + ' {[' + listDice + ']}';\n      }\n\n      this.setState({\n        result: output,\n        history: this.state.history.add(output)\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dice-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Rolador de dados\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Rolagem de dados de RPG, selecione a quantidade de dados e o tipo de dado a ser jogado.\"), React.createElement(\"div\", {\n      className: \"dice-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Rolador de dados (RPG)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"timesDice\",\n      placeholder: \"1\",\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      id: \"typeDice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"d4\"), React.createElement(\"option\", {\n      value: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"d6\"), React.createElement(\"option\", {\n      value: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"d8\"), React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"d10\"), React.createElement(\"option\", {\n      value: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"d12\"), React.createElement(\"option\", {\n      value: \"20\",\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"d20\")), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"modDice\",\n      placeholder: \"Modificador (Ex.: -2, +5, etc.)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"result\",\n      value: this.state.result,\n      readonly: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.rollDice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Rolar!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"rollHistory\",\n      placeholder: \"Hist\\xF3rico de resultados das rolagens...\",\n      value: this.state.history,\n      readonly: \"true\",\n      rows: \"10\",\n      cols: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Limpar!\")));\n  }\n\n}","map":{"version":3,"sources":["E:/Prog/Dev/Code/mydevwebsite/src/pages/diceRoll/index.js"],"names":["React","Component","diceAPI","diceRoll","state","history","result","rollDice","diceRequest","data","Date","hora","getHours","getMinutes","getSeconds","timeDice","document","querySelector","value","typeDice","modDice","operador","mod","response","get","sumDice","listDice","i","dice","length","push","resultado","output","parseInt","setState","add","render","clear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport diceAPI from '../../services/diceAPI.js';\r\nimport \"./styles.css\";\r\n\r\nexport default class diceRoll extends Component {\r\n\r\n    state = {\r\n        history: [],\r\n        result: null\r\n    }\r\n\r\n    rollDice = () => {\r\n        this.diceRequest();\r\n    }\r\n\r\n    diceRequest = async () => {\r\n        const data = new Date();\r\n        const hora = data.getHours() + ':' + data.getMinutes() + ':' + data.getSeconds();\r\n\r\n        const timeDice = document.querySelector('input#timesDice').value;\r\n        const typeDice = document.querySelector('select#typeDice').value;\r\n        const modDice = document.querySelector('input#modDice').value;\r\n        const operador = (modDice < 0 ? \"-\" : \"+\");\r\n        const mod = (modDice < 0 ? modDice * -1 : modDice);\r\n\r\n        const response = await diceAPI.get(`/json/${timeDice}d${typeDice}`);\r\n\r\n        let sumDice = 0;\r\n        let listDice = [];\r\n        for (var i = 0; i < response.data.dice.length; i++) {\r\n            sumDice += response.data.dice[i].value;\r\n            listDice.push(response.data.dice[i].value);\r\n        }\r\n\r\n        //[20:26:53] Jogador rolou 3d20 + 5 = 19 {[7, 2, 5] + 5}\r\n        let resultado = '';\r\n        let output = '';\r\n        if (modDice !== '') {\r\n            resultado = (parseInt(sumDice) + parseInt(modDice));\r\n            output = '[' + hora + '] Jogador rolou ' \r\n                    + timeDice + 'd' \r\n                    + typeDice + ' ' \r\n                    + operador + ' ' + \r\n                    + mod + ' = ' \r\n                    + resultado + ' {[' \r\n                    + listDice + ']' \r\n                    + operador + ' ' + \r\n                    + mod +'}';\r\n        } else {\r\n            resultado = (parseInt(sumDice));\r\n            output = '[' + hora + '] Jogador rolou ' \r\n                    + timeDice + 'd' \r\n                    + typeDice + ' = ' \r\n                    + resultado + ' {[' \r\n                    + listDice + ']}'; \r\n        }\r\n        this.setState({ result: output, history: this.state.history.add(output) })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dice-form\">\r\n                <h2>Rolador de dados</h2>\r\n                <p>Rolagem de dados de RPG, selecione a quantidade de dados e o tipo de dado a ser jogado.</p>\r\n                <div className=\"dice-input\">\r\n                    <h3>Rolador de dados (RPG)</h3>\r\n                    <br />\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"timesDice\"\r\n                        placeholder=\"1\"\r\n                        min=\"1\"\r\n                    />\r\n                    <select id=\"typeDice\">\r\n                        <option value=\"4\">d4</option>\r\n                        <option value=\"6\">d6</option>\r\n                        <option value=\"8\">d8</option>\r\n                        <option value=\"10\">d10</option>\r\n                        <option value=\"12\">d12</option>\r\n                        <option value=\"20\" selected>d20</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"modDice\"\r\n                        placeholder=\"Modificador (Ex.: -2, +5, etc.)\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"result\"\r\n                        value={this.state.result}\r\n                        readonly='true'\r\n                    />                    \r\n                    <br />\r\n                    <button onClick={this.rollDice}>Rolar!</button>\r\n                    <br />\r\n                    <textarea \r\n                        id=\"rollHistory\" \r\n                        placeholder=\"Histórico de resultados das rolagens...\"\r\n                        value={this.state.history}\r\n                        readonly='true' \r\n                        rows=\"10\" \r\n                        cols=\"50\">\r\n                    </textarea>\r\n                    <br />\r\n                    <button onClick={this.clear}>Limpar!</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}