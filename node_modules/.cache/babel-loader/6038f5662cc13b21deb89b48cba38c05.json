{"ast":null,"code":"var _jsxFileName = \"E:\\\\Prog\\\\Dev\\\\Code\\\\mydevwebsite\\\\src\\\\pages\\\\convBinario\\\\index.js\";\nimport React, { Component } from 'react';\nimport \"./styles.css\";\nexport default class convBinario extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      binaryValue: null,\n      decimalValue: null\n    };\n\n    this.convertValueBinToDec = () => {\n      const newDecimalValue = parseInt(document.querySelector('input#BinToDecBinary').value, 2);\n      this.setState({\n        decimalValue: newDecimalValue\n      });\n    };\n\n    this.convertValueDecToBin = () => {\n      const newBinaryValue = parseInt(document.querySelector('input#DecToBinDecimal').value, 10).toString(2);\n      this.setState({\n        binaryValue: newBinaryValue\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"convBin-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Calculadora bin\\xE1ria\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"A calculadora para convers\\xE3o binaria converte facilmente n\\xFAmeros decimais em bin\\xE1rios e vice-versa\"), React.createElement(\"div\", {\n      className: \"convBin-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Converter bin\\xE1rio para decimal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"N\\xFAmero bin\\xE1rio\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"0 ou 1\",\n      autoComplete: \"off\",\n      id: \"BinToDecBinary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"N\\xFAmero decimal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"BinToDecDecimal\",\n      value: this.state.decimalValue,\n      readonly: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.convertValueBinToDec,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Converter\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"convBin-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Converter decimal para bin\\xE1rio\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"N\\xFAmero decimal\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"0 .. 10000\",\n      autoComplete: \"off\",\n      id: \"DecToBinDecimal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"N\\xFAmero bin\\xE1rio\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"DecToBinBinary\",\n      value: this.state.binaryValue,\n      readonly: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.convertValueDecToBin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Converter\")));\n  }\n\n}","map":{"version":3,"sources":["E:/Prog/Dev/Code/mydevwebsite/src/pages/convBinario/index.js"],"names":["React","Component","convBinario","state","binaryValue","decimalValue","convertValueBinToDec","newDecimalValue","parseInt","document","querySelector","value","setState","convertValueDecToBin","newBinaryValue","toString","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./styles.css\";\r\n\r\nexport default class convBinario extends Component {\r\n\r\n    state = {\r\n        binaryValue: null,\r\n        decimalValue: null\r\n    }\r\n\r\n    convertValueBinToDec = () => {\r\n        const newDecimalValue = parseInt(document.querySelector('input#BinToDecBinary').value, 2);\r\n        this.setState({\r\n            decimalValue: newDecimalValue\r\n        });\r\n    }\r\n\r\n    convertValueDecToBin = () => {\r\n        const newBinaryValue = parseInt(document.querySelector('input#DecToBinDecimal').value, 10).toString(2);\r\n        this.setState({\r\n            binaryValue: newBinaryValue\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"convBin-form\">\r\n                <h2>Calculadora binária</h2>\r\n                <p>A calculadora para conversão binaria converte facilmente números decimais em binários e vice-versa</p>\r\n                <div className=\"convBin-div\">\r\n                    <h3>Converter binário para decimal</h3>\r\n                    <br />\r\n                    <label>Número binário</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"0 ou 1\"\r\n                        autoComplete=\"off\"\r\n                        id=\"BinToDecBinary\"\r\n                    />\r\n                    <br />\r\n                    <label>Número decimal</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"BinToDecDecimal\"\r\n                        value={this.state.decimalValue}\r\n                        readonly='true'\r\n                    />\r\n                    <br />\r\n                    <button onClick={this.convertValueBinToDec}>Converter</button>\r\n                </div>\r\n                <br />\r\n                <div className=\"convBin-div\">\r\n                    <h3>Converter decimal para binário</h3>\r\n                    <br />\r\n                    <label>Número decimal</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"0 .. 10000\"\r\n                        autoComplete=\"off\"\r\n                        id=\"DecToBinDecimal\"\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <label>Número binário</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"DecToBinBinary\"\r\n                        value={this.state.binaryValue}\r\n                        readonly='true'\r\n                    />\r\n                    <br />\r\n                    <button onClick={this.convertValueDecToBin}>Converter</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}